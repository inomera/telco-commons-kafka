buildscript {
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.4'
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id "com.google.protobuf" version "0.9.4"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.google.protobuf'

ext {
    set('springCloudVersion', "2024.0.0")
    set('resilience4jVersion', '2.3.0')
}

repositories {
    gradlePluginPortal()
    mavenLocal()
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_23
targetCompatibility = JavaVersion.VERSION_23

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation 'com.google.protobuf:protobuf-java:4.29.3'
    implementation "org.apache.kafka:kafka-clients:${versions.kafka_clients}"
    implementation "com.google.guava:guava:33.4.0-jre"
    implementation 'org.apache.commons:commons-lang3:3.17.0'

    implementation "com.inomera.telco.commons:lang:${versions.lang}"

    implementation project(":spring-kafka")
    implementation project(":kafka-protobuf")

    implementation "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.jupiter}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${versions.jupiter}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${versions.jupiter}"
    testImplementation "org.mockito:mockito-core:${versions.mockito_core}"
    testImplementation "org.mockito:mockito-junit-jupiter:${versions.mockito_jupiter}"
    testImplementation "org.hamcrest:hamcrest:${versions.hamcrest}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

compileJava.dependsOn('generateProto')

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:4.29.3"
    }
    generateProtoTasks {
        all().configureEach {
            it.builtins {
                java {}
            }
        }
    }
    processResources {
        duplicatesStrategy = 'include'
    }
}


