plugins {
    id 'java-library'
}

apply from: "${rootProject.rootDir}/gradle/tests.gradle"
apply from: "${rootProject.rootDir}/gradle/publishing.gradle"

group = 'com.inomera.telco.commons'
version = project.file('VERSION').text.trim()
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    testImplementation {
        extendsFrom compileOnly
    }
}
compileJava.dependsOn(processResources)

dependencies {
    implementation "com.inomera.telco.commons:lang:${versions.lang}"
    implementation "org.apache.kafka:kafka-clients:${versions.kafka_clients}"
    implementation "org.apache.commons:commons-lang3:${versions.commons_lang3}"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.15.3"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.3"
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.2'
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:2.15.3"

    implementation "org.slf4j:slf4j-api:${versions.slf4j}"

    implementation "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.jupiter}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${versions.jupiter}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${versions.jupiter}"
    testImplementation "org.mockito:mockito-core:${versions.mockito_core}"
    testImplementation "org.mockito:mockito-junit-jupiter:${versions.mockito_jupiter}"
    testImplementation "org.hamcrest:hamcrest-all:${versions.hamcrest}"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "${project.group}"
            artifactId = "${project.name}"
            version = "${project.version}"

            from components.java
            artifact tasks.sourceJar
        }
    }
}
